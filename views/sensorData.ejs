<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Real-Time Sensor Data</title>
  <link rel="stylesheet" href="/css/styles.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
  <div class="container">
    <h1>Real-Time Sensor Data</h1>

    <!-- Battery Status Section -->
    <div id="batteryStatus">
      <h2>Battery Status</h2>
      <p>Battery Percentage: <%= batteryPercentage %>%</p>
      <p>Remaining Charging Time: <%= remainingTime %> minutes</p>
    </div>

    <!-- Real-Time Line Graph -->
    <div class="chart-container">
      <canvas id="sensorChart"></canvas>
    </div>

    <!-- Table to display sensor data -->
    <table id="sensorDataTable">
      <thead>
        <tr>
          <th>ID</th>
          <th>Voltage</th>
          <th>Current</th>
          <th>Timestamp</th>
        </tr>
      </thead>
      <tbody>
        <% data.forEach(function(record) { %>
          <tr>
            <td><%= record.id %></td>
            <td><%= record.voltage %> V</td>
            <td><%= record.current %> A</td>
            <td><%= new Date(record.timestamp).toLocaleString() %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <script>
    // Get the context for the charts
    const voltageChartCtx = document.getElementById('sensorChart').getContext('2d');

    // Initialize the line chart for voltage and current
    let sensorChart = new Chart(voltageChartCtx, {
        type: 'line',
        data: {
            labels: [], // Placeholder for timestamps
            datasets: [
                {
                    label: 'Voltage (V)',
                    data: [],
                    borderColor: 'blue',  // Voltage line color
                    tension: 0.1,  // Smoothing the line
                },
                {
                    label: 'Current (A)',
                    data: [],
                    borderColor: 'red',  // Current line color
                    tension: 0.1,  // Smoothing the line
                }
            ]
        },
        options: {
            scales: {
                x: {
                    type: 'linear',
                    position: 'bottom',
                }
            }
        }
    });

    // Function to fetch the data from the server
    async function fetchData() {
        const response = await fetch('/api/sensordata');
        const data = await response.json();

        const labels = data.map(item => new Date(item.timestamp).toLocaleString());
        const voltages = data.map(item => item.voltage);
        const currents = data.map(item => item.current);

        // Update the chart
        sensorChart.data.labels = labels;
        sensorChart.data.datasets[0].data = voltages;
        sensorChart.data.datasets[1].data = currents;
        sensorChart.update();

        // Update the table
        const table = document.getElementById("sensorDataTable");
        table.innerHTML = data.slice(-5).map(item => `
            <tr>
                <td>${item.id}</td>
                <td>${item.voltage} V</td>
                <td>${item.current} A</td>
                <td>${new Date(item.timestamp).toLocaleString()}</td>
            </tr>
        `).join('');
    }

    setInterval(fetchData, 1000);
    fetchData();
  </script>
</body>
</html>
